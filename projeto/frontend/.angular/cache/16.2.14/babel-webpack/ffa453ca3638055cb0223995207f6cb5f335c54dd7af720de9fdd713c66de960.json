{"ast":null,"code":"import { of } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WebsiteService {\n  constructor(http) {\n    this.http = http;\n    this.websitesUrl = 'http://appserver.alunos.di.fc.ul.pt:3090/api/websites';\n    this.pagesUrl = 'http://appserver.alunos.di.fc.ul.pt:3090/api/pages';\n    this.websiteUrl = 'http://appserver.alunos.di.fc.ul.pt:3090/api/website';\n    this.pageUrl = 'http://appserver.alunos.di.fc.ul.pt:3090/api/page';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  // POST Request Websites\n  addWebsite(website) {\n    return this.http.post(this.websiteUrl, website).pipe(map(() => 'Website adicionado com sucesso'), catchError(error => {\n      console.error(error);\n      return of('Falha ao adicionar site');\n    }));\n  }\n  addPage(page) {\n    return this.http.post(this.pageUrl, page, this.httpOptions).pipe(catchError(this.handleError('addPage')));\n  }\n  // GET Request\n  getWebsite(id) {\n    const url = `${this.websiteUrl}/${id}`;\n    return this.http.get(url).pipe(map(website => {\n      if (website && website._id) {\n        website.id = website._id.toString(); // Convert ObjectId to string\n        delete website._id; // Remove _id field if needed\n      }\n\n      return website;\n    }), tap(website => {\n      const outcome = website ? 'fetched' : 'did not find';\n    }), catchError(this.handleError(`getWebsite id=${id}`)));\n  }\n  // GET Request Websites\n  getWebsites() {\n    return this.http.get(this.websitesUrl).pipe(catchError(this.handleError('getWebsites', [])));\n  }\n  // GET Request Pages\n  getPages() {\n    return this.http.get(this.pagesUrl).pipe(catchError(this.handleError('getPages', [])));\n  }\n  // PUT Request\n  updateWebsite(website) {\n    const url = `${this.websiteUrl}/${website.id}`;\n    return this.http.put(url, website, this.httpOptions).pipe(map(() => 'Página adicionada com sucesso'), catchError(() => of('Falha ao adicionar página')));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      console.error(error);\n      // Let the app keep running by returning an empty result.\n      return of(result);\n    };\n  }\n  static #_ = this.ɵfac = function WebsiteService_Factory(t) {\n    return new (t || WebsiteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WebsiteService,\n    factory: WebsiteService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","HttpHeaders","catchError","map","tap","WebsiteService","constructor","http","websitesUrl","pagesUrl","websiteUrl","pageUrl","httpOptions","headers","addWebsite","website","post","pipe","error","console","addPage","page","handleError","getWebsite","id","url","get","_id","toString","outcome","getWebsites","getPages","updateWebsite","put","operation","result","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/PSI040/projeto/frontend/src/app/website.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of} from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Website } from './Website';\nimport { WebsitePage } from './WebsitePage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsiteService {\n  \n  private websitesUrl = 'http://appserver.alunos.di.fc.ul.pt:3090/api/websites'; \n  private pagesUrl = 'http://appserver.alunos.di.fc.ul.pt:3090/api/pages'; \n  private websiteUrl = 'http://appserver.alunos.di.fc.ul.pt:3090/api/website'; \n  private pageUrl = 'http://appserver.alunos.di.fc.ul.pt:3090/api/page'\n  \n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n  };\n\n  constructor(\n    private http: HttpClient) { }\n\n  // POST Request Websites\n  addWebsite(website: Website): Observable<string> {\n    return this.http.post<string>(this.websiteUrl, website)\n      .pipe(\n        map(() => 'Website adicionado com sucesso'),\n        catchError(error => {\n          console.error(error);\n          return of('Falha ao adicionar site');\n        })\n      );\n  }\n\n  addPage(page: WebsitePage): Observable<WebsitePage>  {\n    return this.http.post<WebsitePage>(this.pageUrl, page, this.httpOptions).pipe(\n      catchError(this.handleError<WebsitePage>('addPage'))\n    );\n  }\n\n  // GET Request\n  getWebsite<Data>(id: string): Observable<Website> {\n    const url = `${this.websiteUrl}/${id}`;\n    return this.http.get<any>(url).pipe(\n      map((website: any) => {\n        if (website && website._id) {\n          website.id = website._id.toString(); // Convert ObjectId to string\n          delete website._id; // Remove _id field if needed\n        }\n        return website as Website;\n      }),\n      tap((website: Website) => {\n        const outcome = website ? 'fetched' : 'did not find';\n      }),\n      catchError(this.handleError<Website>(`getWebsite id=${id}`))\n    );\n  }\n\n  // GET Request Websites\n  getWebsites(): Observable<Website[]> {\n    return this.http.get<Website[]>(this.websitesUrl).pipe(\n      catchError(this.handleError<Website[]>('getWebsites', []))\n    );\n  }\n  // GET Request Pages\n  getPages(): Observable<WebsitePage[]> {\n    return this.http.get<WebsitePage[]>(this.pagesUrl).pipe(\n      catchError(this.handleError<WebsitePage[]>('getPages', []))\n    );\n  }\n\n  // PUT Request\n  updateWebsite(website: Website): Observable<string> {\n    const url = `${this.websiteUrl}/${website.id}`;\n    return this.http.put(url, website, this.httpOptions).pipe(\n      map(() => 'Página adicionada com sucesso'),\n      catchError(() => of('Falha ao adicionar página'))\n    );\n  }\n  \n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}